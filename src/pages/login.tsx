import Head from 'next/head';
import React, { FormEvent, useEffect, useState } from 'react';
import styles from '@/styles/Home.module.scss';
import registerStyles from '../styles/register.module.scss';
import { Button, Container, Form, Input } from 'reactstrap';
import ToastComponent from '@/components/common/toast';
import { useRouter } from 'next/router';
import authService from '@/services/authService';
import LoggedStatus from '@/components/LoggedStatus';
const height = '450px';

export default function login() {
  const router = useRouter();
  const [toastColor, setToastColor] = useState('');
  const [toastIsOpen, setToastIsOpen] = useState(false);
  const [toastMessage, setToastMessage] = useState('');

  useEffect(() => {
    if (sessionStorage.getItem('currencyConverter-token')) {
      router.push('/');
    }
  }, []);

  useEffect(() => {
    const registerSuccess = router.query.success;
    if (registerSuccess === 'true') {
      setToastColor('bg-success');
      setToastIsOpen(true);
      setTimeout(() => {
        setToastIsOpen(false);
      }, 1000 * 3);
      setToastMessage('Successfully Registered');
    }
    const isLogged = router.query.isLogged;
    if (isLogged === 'false') {
      setToastColor('bg-danger');
      setToastIsOpen(true);
      setTimeout(() => {
        setToastIsOpen(false);
      }, 1000 * 3);
      setToastMessage('Please login to be able to save convertions');
    }
  }, [router.query]);

  const handleLogin = async (e: FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    const formData = new FormData(e.currentTarget);
    const email = formData.get('email')!.toString();
    const password = formData.get('password')!.toString();
    const params = { email, password };

    const { status } = await authService.login(params);
    if (status === 200) {
      router.push('/');
    }
  };
  const handleReturnToHome = async () => {
    router.push('/');
  };
  const handleGoToRegister = async () => {
    router.push('/register');
  };

  return (
    <>
      <Head>
        <title>Currency Converter</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&display=swap"
          rel="stylesheet"
        />
      </Head>
      <main className={styles.main}>
        <Container className={styles.container} style={{ height: `${height}` }}>
          <LoggedStatus logged={false} />
          <p className={styles.appTitle}>Currency Converter</p>
          <div className={styles.pageContent}>
            <Form className={registerStyles.form} onSubmit={handleLogin}>
              <p className={styles.appSubTitle}>Login</p>
              <Input
                id="email"
                name="email"
                type="email"
                className={registerStyles.input}
                placeholder="Email"
                required
              ></Input>
              <Input
                id="password"
                name="password"
                type="password"
                className={registerStyles.input}
                placeholder="Password"
                required
              ></Input>
              <Button type="submit" className={styles.button}>
                Login
              </Button>
            </Form>
            <section className={styles.buttonsSection}>
              <Button className={styles.button} onClick={handleReturnToHome}>
                Return to Home
              </Button>
              <Button className={styles.button} onClick={handleGoToRegister}>
                Go to Register
              </Button>
            </section>
          </div>
        </Container>
        <ToastComponent
          color={toastColor}
          isOpen={toastIsOpen}
          message={toastMessage}
        />
      </main>
    </>
  );
}
